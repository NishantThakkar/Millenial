// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Millennial.DB;

namespace Millennial.API.Migrations
{
    [DbContext(typeof(ECommerceDemoContext))]
    [Migration("20200316191931_ForeignKey")]
    partial class ForeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Millennial.DB.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProdCatId")
                        .HasColumnType("int");

                    b.Property<string>("ProdDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("ProductId");

                    b.HasIndex("ProdCatId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Millennial.DB.ProductAttribute", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("ProductId", "AttributeId", "AttributeValue");

                    b.HasIndex("AttributeId");

                    b.ToTable("ProductAttribute");
                });

            modelBuilder.Entity("Millennial.DB.ProductAttributeLookup", b =>
                {
                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("ProdCatId")
                        .HasColumnType("int");

                    b.HasKey("AttributeId");

                    b.HasIndex("ProdCatId");

                    b.ToTable("ProductAttributeLookup");

                    b.HasData(
                        new
                        {
                            AttributeId = 1,
                            AttributeName = "Color",
                            ProdCatId = 1
                        },
                        new
                        {
                            AttributeId = 2,
                            AttributeName = "Make",
                            ProdCatId = 1
                        },
                        new
                        {
                            AttributeId = 3,
                            AttributeName = "Model",
                            ProdCatId = 1
                        },
                        new
                        {
                            AttributeId = 4,
                            AttributeName = "RAM",
                            ProdCatId = 2
                        },
                        new
                        {
                            AttributeId = 5,
                            AttributeName = "Front Camera",
                            ProdCatId = 2
                        },
                        new
                        {
                            AttributeId = 6,
                            AttributeName = "Rear Camera",
                            ProdCatId = 2
                        });
                });

            modelBuilder.Entity("Millennial.DB.ProductCategory", b =>
                {
                    b.Property<int>("ProdCatId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("ProdCatId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            ProdCatId = 1,
                            CategoryName = "Car"
                        },
                        new
                        {
                            ProdCatId = 2,
                            CategoryName = "Mobile"
                        });
                });

            modelBuilder.Entity("Millennial.DB.Product", b =>
                {
                    b.HasOne("Millennial.DB.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProdCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Millennial.DB.ProductAttribute", b =>
                {
                    b.HasOne("Millennial.DB.ProductAttributeLookup", "ProductAttributeLookup")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Millennial.DB.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Millennial.DB.ProductAttributeLookup", b =>
                {
                    b.HasOne("Millennial.DB.ProductCategory", "ProductCategory")
                        .WithMany("ProductAttributeLookups")
                        .HasForeignKey("ProdCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
